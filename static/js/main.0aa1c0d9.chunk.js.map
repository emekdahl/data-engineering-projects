{"version":3,"sources":["Blog.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","mainFeaturedPost","position","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","mainGrid","marginTop","card","display","cardDetails","cardMedia","width","markdown","typography","body2","sidebarAboutBox","sidebarSection","footer","background","paper","featuredPosts","title","date","description","link","social","network","Blog","classes","Fragment","CssBaseline","Container","maxWidth","Toolbar","className","Button","size","component","noWrap","IconButton","map","item","key","Paper","style","src","alt","Grid","container","md","gutterBottom","post","xs","CardActionArea","Card","CardContent","paragraph","Hidden","xsDown","CardMedia","image","Divider","elevation","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0aa1c0d9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"\">\n        Emily Ekdahl\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n  mainFeaturedPost: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/user/erondu)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  mainFeaturedPostContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst featuredPosts = [\n  {\n    title: 'SQL for Data Analysis',\n    date: 'In Progress',\n    description:\n      'Advanced SQL learning and practice.',\n    link: 'https://github.com/emekdahl/data_science_programming/tree/master/sql_for_data_analysis'\n  },\n  {\n    title: 'Intro to Python',\n    date: 'In Progress',\n    description:\n      'Python scripting and syntax.',\n    link: 'https://github.com/emekdahl/data_science_programming/tree/master/intro_to_python'\n  },\n];\n\nconst social = [ \n                    {   network:'GitHub', link: \"https://github.com/emekdahl\"}  \n                    , {   network:  'Kaggle', link: \"https://www.kaggle.com/emekdahl\" }                                                         \n                    , {   network:'Twitter', link: \"https://twitter.com/emekdahl\"}                     \n                    , {   network: 'Medium', link: \"https://medium.com/@emekdahl\"}\n                    , { network:'LinkedIn', link: \"https://www.linkedin.com/in/emilyekdahl\"}\n                ];\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolbar}>\n          <Button size=\"small\" href=\"https://github.com/emekdahl\">Portfolio</Button>\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            \n            noWrap\n            className={classes.toolbarTitle}\n          >\n            \n          </Typography>\n          <IconButton>\n          </IconButton>\n          <Button variant=\"outlined\" size=\"small\" href=\"https://www.linkedin.com/in/emilyekdahl\">\n            Contact Me\n          </Button>\n        </Toolbar>\n        <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n          {social.map(item => (\n            <Link\n              color=\"inherit\"\n              noWrap\n              key={item.network}\n              variant=\"body2\"\n              href={item.link}\n              className={classes.toolbarLink}\n            >\n              {item.network}\n            </Link>\n          ))}\n        </Toolbar>\n        <main>\n          {/* Main featured post */}\n          <Paper className={classes.mainFeaturedPost}>\n            {/* Increase the priority of the hero background image */}\n            {\n              <img\n                style={{ display: 'none' }}\n                src=\"https://source.unsplash.com/user/erondu\"\n                alt=\"background\"\n              />\n            }\n            <div className={classes.overlay} />\n            <Grid container>\n              <Grid item md={6}>\n                <div className={classes.mainFeaturedPostContent}>\n                  <Typography component=\"h1\" variant=\"h2\" color=\"inherit\" gutterBottom>\n                    Emily Ekdahl\n                  </Typography>\n                  <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" gutterBottom>\n                    Data Engineer\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n          {/* End main featured post */}\n          {/* Sub featured posts */}\n          <Grid container spacing={4}>\n            {featuredPosts.map(post => (\n              <Grid item key={post.title} xs={12} md={6}>\n                <CardActionArea component=\"a\" href={post.link}>\n                  <Card className={classes.card}>\n                    <div className={classes.cardDetails}>\n                      <CardContent>\n                        <Typography component=\"h2\" variant=\"h5\">\n                          {post.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                          {post.date}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" paragraph>\n                          {post.description}\n                        </Typography>                        \n                        <GitHubIcon href={post.link}></GitHubIcon>\n                      </CardContent>\n                    </div>\n                    <Hidden xsDown>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"https://source.unsplash.com/random\"\n                        title=\"Image title\"\n                      />\n                    </Hidden>\n                  </Card>\n                </CardActionArea>\n              </Grid>\n            ))}\n          </Grid>\n          {/* End sub featured posts */}\n          <Grid container spacing={5} className={classes.mainGrid}>\n            {/* Main content */}\n            <Grid item xs={12} md={8}>\n              <Typography variant=\"h6\" gutterBottom>\n                Projects\n              </Typography>              \n              <Divider />              \n            </Grid>\n            {/* End main content */}\n            {/* Sidebar */}\n            <Grid item xs={12} md={4}>\n              <Paper elevation={0} className={classes.sidebarAboutBox}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Skills\n                </Typography>\n                <Typography>\n                SQL, ElasticSearch, AWS RDS, Java, Python, Git, Bash, Codefresh, JavaScript, Docker, Kubernetes\n                </Typography>\n              </Paper>\n              {/* <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n                Archives\n              </Typography>\n              {archives.map(archive => (\n                <Link display=\"block\" variant=\"body1\" href=\"#\" key={archive}>\n                  {archive}\n                </Link>\n              ))} */}\n              <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n                Social\n              </Typography>\n              {social.map(item => (\n                <Link display=\"block\" variant=\"body1\" href={item.link} key={item.network}>\n                  {item.network}\n                </Link>\n              ))}\n            </Grid>\n            {/* End sidebar */}\n          </Grid>\n        </main>\n      </Container>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Container maxWidth=\"lg\">\n          <Copyright />\n        </Container>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Blog from './Blog'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Blog></Blog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}